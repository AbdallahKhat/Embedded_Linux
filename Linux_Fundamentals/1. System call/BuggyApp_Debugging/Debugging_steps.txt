"strace is a Troubleshooting tool for tracing system calls."

STEPS TO DEBUG THE ISSUE PRESENT IN THIS CODE THROUGH "strace"


Step 1:         After compiling the application, We Can Count time, calls, and errors for each system call and report 
                a summary on program exit by Running the following command line "$ strace -c program" through the terminal
                

EX:             $ strace -c ./BuggyApp

Result:

Error: File not found!
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 39.37    0.000387         387         1           execve
 29.60    0.000291          13        22           mmap
  9.05    0.000089          11         8           mprotect
  5.39    0.000053           8         6         1 openat
  3.36    0.000033           6         5           close
  2.95    0.000029           5         5           newfstatat
  2.54    0.000025           6         4           read
  2.24    0.000022           5         4           pread64
  1.12    0.000011           3         3           brk
  0.92    0.000009           9         1         1 access
  0.92    0.000009           4         2         1 arch_prctl
  0.71    0.000007           7         1           munmap
  0.41    0.000004           4         1           set_tid_address
  0.41    0.000004           4         1           set_robust_list
  0.41    0.000004           4         1           rseq
  0.31    0.000003           3         1           write
  0.10    0.000001           1         1           futex
  0.10    0.000001           1         1           prlimit64
  0.10    0.000001           1         1           getrandom
------ ----------- ----------- --------- --------- ----------------
100.00    0.000983          14        69         3 total


Analysis:	Failed system calls present = arch_prctl, access, openat



Step 2:         Start tracing a program by executing it:
                $ strace program


EX:             $ strace ./BuggyApp

Result:

execve("./BuggyApp", ["./BuggyApp"], 0x7ffc947c2620 /* 58 vars */) = 0
brk(NULL)                               = 0x634b42141000
arch_prctl(0x3001 /* ARCH_??? */, 0x7ffc67c15f00) = -1 EINVAL (Invalid argument)
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7902a3f0a000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=61567, ...}, AT_EMPTY_PATH) = 0
mmap(NULL, 61567, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7902a3efa000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libstdc++.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=2260296, ...}, AT_EMPTY_PATH) = 0
mmap(NULL, 2275520, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7902a3c00000
mprotect(0x7902a3c9a000, 1576960, PROT_NONE) = 0
mmap(0x7902a3c9a000, 1118208, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x9a000) = 0x7902a3c9a000
mmap(0x7902a3dab000, 454656, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1ab000) = 0x7902a3dab000
mmap(0x7902a3e1b000, 57344, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x21a000) = 0x7902a3e1b000
mmap(0x7902a3e29000, 10432, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7902a3e29000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libgcc_s.so.1", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=125488, ...}, AT_EMPTY_PATH) = 0
mmap(NULL, 127720, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7902a3eda000
mmap(0x7902a3edd000, 94208, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7902a3edd000
mmap(0x7902a3ef4000, 16384, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1a000) = 0x7902a3ef4000
mmap(0x7902a3ef8000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1d000) = 0x7902a3ef8000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0"..., 832) = 832
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0"..., 48, 848) = 48
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0I\17\357\204\3$\f\221\2039x\324\224\323\236S"..., 68, 896) = 68
newfstatat(3, "", {st_mode=S_IFREG|0755, st_size=2220400, ...}, AT_EMPTY_PATH) = 0
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
mmap(NULL, 2264656, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7902a3800000
mprotect(0x7902a3828000, 2023424, PROT_NONE) = 0
mmap(0x7902a3828000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7902a3828000
mmap(0x7902a39bd000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7902a39bd000
mmap(0x7902a3a16000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x215000) = 0x7902a3a16000
mmap(0x7902a3a1c000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7902a3a1c000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=940560, ...}, AT_EMPTY_PATH) = 0
mmap(NULL, 942344, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7902a3b19000
mmap(0x7902a3b27000, 507904, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xe000) = 0x7902a3b27000
mmap(0x7902a3ba3000, 372736, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8a000) = 0x7902a3ba3000
mmap(0x7902a3bfe000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xe4000) = 0x7902a3bfe000
close(3)                                = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7902a3ed8000
mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7902a3ed5000
arch_prctl(ARCH_SET_FS, 0x7902a3ed5740) = 0
set_tid_address(0x7902a3ed5a10)         = 10211
set_robust_list(0x7902a3ed5a20, 24)     = 0
rseq(0x7902a3ed60e0, 0x20, 0, 0x53053053) = 0
mprotect(0x7902a3a16000, 16384, PROT_READ) = 0
mprotect(0x7902a3bfe000, 4096, PROT_READ) = 0
mprotect(0x7902a3ef8000, 4096, PROT_READ) = 0
mprotect(0x7902a3e1b000, 45056, PROT_READ) = 0
mprotect(0x634b419a5000, 4096, PROT_READ) = 0
mprotect(0x7902a3f44000, 8192, PROT_READ) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
munmap(0x7902a3efa000, 61567)           = 0
getrandom("\x92\xe0\x09\x62\xfa\x5d\xf2\x69", 8, GRND_NONBLOCK) = 8
brk(NULL)                               = 0x634b42141000
brk(0x634b42162000)                     = 0x634b42162000
futex(0x7902a3e2977c, FUTEX_WAKE_PRIVATE, 2147483647) = 0
openat(AT_FDCWD, "sample.txt", O_RDONLY) = -1 ENOENT (No such file or directory)
write(2, "Error: File not found!\n", 23Error: File not found!
) = 23
exit_group(1)                           = ?
+++ exited with 1 +++



Step 3:         Extract Error messages from the system calls


Results:

arch_prctl(0x3001 /* ARCH_??? */, 0x7ffc67c15f00) = -1 EINVAL (Invalid argument)
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "sample.txt", O_RDONLY) = -1 ENOENT (No such file or directory)


Analysis:      In the arc_prctl system call: an invalid argument was passed
               In the access system call:    No such file or directory with the path "/etc/ld.so.preload"
               In openat system call:        No such file with the name "sample.txt"
               
               
Findings:      The application can't find the "sample.txt" file
               You can resolve the app bug by creating the "sample.txt" in the corresponding directory


